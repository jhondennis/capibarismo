---
import BuyMeACoffee from '@/components/BuyMeACoffee.astro'
import LanguageSwitcher from '@/components/LanguageSwitcher.astro'
import ThemeToggle from '@/components/ThemeToggle.astro'

export interface HeaderProps {
  title: string
  navLinks: { href: string; text: string }[]
  github: string
  buyMeACoffee: string
  hrefBuymeacoffee: string
}
const { title, navLinks, github, buyMeACoffee, hrefBuymeacoffee } = Astro.props as HeaderProps
---

<header
  class="bg-warm-50/80 dark:bg-warm-900/80 border-warm-200 dark:border-warm-800 sticky z-50 backdrop-blur-md"
>
  <div class="container mx-auto flex items-center justify-between px-4 py-4">
    <a href="/" class="group flex items-center">
      <div
        class="bg-warm-200 dark:bg-warm-800 flex h-10 w-10 items-center justify-center overflow-hidden rounded-full transition-transform group-hover:scale-110"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="h-6 w-6"
        >
          <circle cx="12" cy="12" r="10"></circle>
          <circle cx="8" cy="9" r="1"></circle>
          <circle cx="16" cy="9" r="1"></circle>
          <path d="M9 16c.85.63 1.9 1 3 1s2.15-.37 3-1"></path>
        </svg>
      </div>
      <span class="ml-2 text-xl font-bold tracking-tight">{title}</span>
    </a>

    <nav class="hidden items-center md:flex">
      {
        navLinks.map((link) => (
          <a href={link.href} class="nav-link mx-2">
            {link.text}
          </a>
        ))
      }
    </nav>

    <div class="flex items-center gap-2">
      <div class="hidden md:flex">
        <LanguageSwitcher />
      </div>
      <ThemeToggle />

      <a
        href={github}
        target="_blank"
        rel="noopener noreferrer"
        class="hover:bg-warm-200 dark:hover:bg-warm-800 rounded-full p-2 transition-colors"
        aria-label="GitHub Repository"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="h-5 w-5"
        >
          <path
            d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"
          ></path>
        </svg>
      </a>

      <div class="hidden md:flex">
        <BuyMeACoffee buymeacoffee={buyMeACoffee} href={hrefBuymeacoffee} />
      </div>

      <button
        id="mobile-menu-toggle"
        class="hover:bg-warm-200 dark:hover:bg-warm-800 rounded-full p-2 transition-colors md:hidden"
        aria-label="Toggle menu"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="h-6 w-6"
        >
          <line x1="3" y1="12" x2="21" y2="12"></line>
          <line x1="3" y1="6" x2="21" y2="6"></line>
          <line x1="3" y1="18" x2="21" y2="18"></line>
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile menu -->
  <div
    id="mobile-menu"
    class="border-warm-200 dark:border-warm-800 container mx-auto hidden border-t px-4 py-4 md:hidden"
  >
    <nav class="flex flex-col">
      {
        navLinks.map((link) => (
          <a href={link.href} class="nav-link">
            {link.text}
          </a>
        ))
      }
    </nav>
    <BuyMeACoffee buymeacoffee={buyMeACoffee} href={hrefBuymeacoffee} />
  </div>
</header>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle')
    const mobileMenu = document.getElementById('mobile-menu')

    if (mobileMenuToggle && mobileMenu) {
      mobileMenuToggle.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden')
      })
    }
  })
</script>

<style>
  .nav-link {
    position: relative;
    font-weight: var(--font-weight-medium);
  }

  .nav-link::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 0;
    height: 2px;
    background-color: currentColor;
    transition: width 0.3s ease;
  }

  .nav-link:hover::after {
    width: 100%;
  }
</style>
